---
- name: Install bind9 rndc key
  ansible.builtin.template:
    src: "{{ bind9_templates | default('') }}bind/rndc.key.j2"
    dest: /etc/bind/rndc.key
    owner: "{{ bind9_user }}"
    group: "{{ bind9_group }}"
    mode: "0640"
  when: bind9_rndc_key | default()
  notify:
    - Restart bind9
  tags:
    - role:bind9:rndc_key
  become: true

- name: Create bind9 directory for keys
  ansible.builtin.file:
    path: "{{ bind9_keydir }}"
    state: directory
    owner: "{{ bind9_user }}"
    group: "{{ bind9_group }}"
    mode: "02750"
  when: bind9_authoritative | default()
  tags:
    - role:bind9:ddns
    - role:bind9:dnssec
  become: true

# TODO: DNSSEC: implement key rollover
- name: Determine if DNSSEC keys for zones already exist
  ansible.builtin.find:
    paths: "{{ bind9_keydir }}"
    patterns: "K{{ item.name }}.+008+*"
  register: bind9_reg_dnssec_keys_tmp
  with_items:
    - "{{ bind9_zones_dynamic + bind9_zones_static }}"
  when:
    - bind9_authoritative | default()
    - bind9_dnssec | default() or item.dnssec | default(bind9_dnssec_zones_default_enabled)
    - item.dnssec | default(bind9_dnssec_zones_default_enabled)
  tags:
    - role:bind9:dnssec
  become: true

# Filter out all skipped results (e.g. if item.dnssec is set to False)
- name: Set bind9_reg_dnssec_keys
  ansible.builtin.set_fact:
    bind9_reg_dnssec_keys: "{{ bind9_reg_dnssec_keys_tmp.results | selectattr('skipped', 'undefined') | list }}"

- name: Generate bind9 key signing keys for zones
  ansible.builtin.command: dnssec-keygen -a RSASHA256 -b 4096 -n ZONE -f KSK {{ item.item.name }}
  args:
    chdir: "{{ bind9_keydir }}"
  register: bind9_reg_keygen_ksk
  changed_when: bind9_reg_keygen_ksk.rc != 0
  become: true
  become_user: "{{ bind9_user }}"
  with_items: "{{ bind9_reg_dnssec_keys }}"
  when:
    - bind9_authoritative | default()
    - bind9_dnssec | default()
    - item.matched < 2
  notify:
    - Reload bind9
  tags:
    - role:bind9:dnssec

- name: Generate bind9 zone signing keys for zones
  ansible.builtin.command: dnssec-keygen -a RSASHA256 -b 2048 -n ZONE {{ item.item.name }}
  args:
    chdir: "{{ bind9_keydir }}"
  register: bind9_reg_keygen_zsk
  changed_when: bind9_reg_keygen_zsk.rc != 0
  become: true
  become_user: "{{ bind9_user }}"
  with_items: "{{ bind9_reg_dnssec_keys }}"
  when:
    - bind9_authoritative | default()
    - bind9_dnssec | default()
    - item.matched < 2
  notify:
    - Reload bind9
  tags:
    - role:bind9:dnssec

- name: Read in key signing keys from key files (DNSKEY)
  ansible.builtin.command: "grep 'IN DNSKEY' {{ bind9_keydir }}/{{ item.stdout }}.key"
  register: bind9_reg_ksk
  changed_when: false
  with_items: "{{ bind9_reg_keygen_ksk.results }}"
  when:
    - bind9_authoritative | default()
    - bind9_dnssec | default()
    - item.changed | default()
  tags:
    - role:bind9:dnssec

- name: Generate DS records from key signing keys
  ansible.builtin.command: "dnssec-dsfromkey -2 {{ bind9_keydir }}/{{ item.stdout }}.key"
  register: bind9_reg_ksk_ds
  become: true
  changed_when: false
  with_items: "{{ bind9_reg_keygen_ksk.results }}"
  when:
    - bind9_authoritative | default()
    - bind9_dnssec | default()
    - item.changed | default()
  tags:
    - role:bind9:dnssec
