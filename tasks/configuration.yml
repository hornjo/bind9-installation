---
- name: Configure bind9 named.conf files
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: /etc/bind/{{ item }}
    owner: root
    group: "{{ bind9_group }}"
    mode: "0644"
  with_items:
    - named.conf.local
    - named.conf.options
  notify:
    - Reload bind9
  # Variable register for eventual use outside the role
  register: bind9_named_conf

- name: Check validity of named.conf
  ansible.builtin.command: named-checkconf
  register: bind9_reg_named_checkconf
  become: true
  become_user: "{{ bind9_user }}"
  changed_when: false
  vars:
    ansible_ssh_pipelining: true

- name: Create bind9 directory for master zones
  ansible.builtin.file:
    path: "{{ bind9_zonedir }}"
    state: directory
    owner: root
    group: "{{ bind9_group }}"
    mode: "02775"
  when: bind9_authoritative | default()

- name: Create bind9 directory for master zone includes
  ansible.builtin.file:
    path: "{{ bind9_zonedir }}/includes"
    state: directory
    owner: root
    group: "{{ bind9_group }}"
    mode: "0755"
  when: bind9_authoritative | default()

- name: Install bind9 authoritative include files
  ansible.builtin.template:
    src: "bind/zones/includes/{{ item }}.j2"
    dest: "{{ bind9_zonedir }}/includes/{{ item }}"
    owner: root
    group: "{{ bind9_group }}"
    mode: "0644"
  with_items: "{{ bind9_authoritative_includes }}"
  when: bind9_authoritative | default()
  notify:
    - Zone file change
    - Reload bind9

- name: Configure dnssec
  ansible.builtin.include_tasks: dnssec.yml

- name: Create dynamic bind9 zone files
  ansible.builtin.template:
    src: "zones/db.template.j2"
    dest: "{{ bind9_zonedir }}/db.{{ item.name }}"
    owner: root
    group: "{{ bind9_group }}"
    mode: "0644"
  with_items: "{{ bind9_zones_dynamic }}"
  when:
    - bind9_authoritative | default()
    - item.type | default(bind9_zone_type) == 'master'
  notify:
    - Zone file change
    - Reload bind9
  tags:
    - role:bind9:zones

- name: Install static bind9 zone files
  ansible.builtin.copy:
    src: zones/db.{{ item.name }}
    dest: "{{ bind9_zonedir }}/db.{{ item.name }}"
    owner: root
    group: "{{ bind9_group }}"
    mode: "0644"
    force: "{{ item.force_update | default('yes') }}"
  with_items: "{{ bind9_zones_static }}"
  when:
    - bind9_authoritative | default()
    - item.type | default(bind9_zone_type) == 'master'
  notify:
    - Zone file change
    - Reload bind9
  tags:
    - role:bind9:zones

- name: Check validity of zone files
  ansible.builtin.command: named-checkzone {{ item.name }} {{ bind9_zonedir }}/db.{{ item.name }}
  register: bind9_reg_named_checkzone
  become: true
  become_user: "{{ bind9_user }}"
  with_items:
    - "{{ bind9_zones_dynamic }}"
    - "{{ bind9_zones_static }}"
  when: item.type | default(bind9_zone_type) == 'master'
  changed_when: false
  vars:
    ansible_ssh_pipelining: true
